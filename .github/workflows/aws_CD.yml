name: Deploy to AWS EC2

on:
  push:
    branches: [ main ]

defaults:
  run:
    working-directory: .

jobs:
  dockerhub-upload-image:
      name: push
      runs-on: ubuntu-latest
      env:
          IMAGE_TAG: ${{ github.run_number }}
          BUILD_NUMBER: ${{ github.run_number }}
          ECR_REGISTRY: 405906814034.dkr.ecr.ap-northeast-2.amazonaws.com
          ECR_REPOSITORY: feelin-dev/feelin-social-server

      steps:
        - name: Checkout
          uses: actions/checkout@v2

        - name: Set up JDK 11
          uses: actions/setup-java@v2
          with:
            java-version: '11'
            distribution: 'adopt'
            cache: gradle

        - name: Grant execute permission for gradlew
          run: chmod +x ./gradlew

        - name: Build with Gradle
          run: ./gradlew build -x test -x ktlintCheck

        - name: Docker meta
          id: docker_meta
          uses: crazy-max/ghaction-docker-meta@v1
          with:
            images: yeonsumia/waffle-music-sns
            tag-semver: |
              {{version}}
              {{major}}.{{minor}}

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1

        - name: Login to DockerHub
          uses: docker/login-action@v1
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}

        - name: Build and Push Docker Image
          uses: docker/build-push-action@v2
          with:
            context: .
            file: ./Dockerfile
            platforms: linux/amd64
            push: true
            tags: ${{ steps.docker_meta.outputs.tags }}
            labels: ${{ steps.docker_meta.outputs.labels }}

  deploy-setup:
      name: setup
      needs: dockerhub-upload-image
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v2

        - name: Make directory for zip
          run: mkdir deploy

        - name: Copy docker-compose.yml
          run: cp docker-compose.yml ./deploy/

        - name: Copy appspec.yml
          run: cp appspec.yml ./deploy/

        - name: Copy deploy scripts
          run: cp -r ./scripts/deploy/ ./deploy/

        - name: Zip deploy directory
          run: zip -r -qq -j ./waffle-music-sns.zip ./deploy

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_IAM_MANAGER_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_IAM_MANAGER_SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_REGION }}

        - name: Copy zip file to AWS S3
          run: |
            aws s3 cp \
              --region ${{ secrets.AWS_REGION }} \
              --acl private \
              ./waffle-music-sns.zip s3://${{ secrets.AWS_BUCKET }}/

  deploy-dev:
      name: deploy (dev)
      needs: deploy-setup
      runs-on: ubuntu-latest
      environment: dev
      steps:
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_IAM_MANAGER_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_IAM_MANAGER_SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_REGION }}

        - name: Login to ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v1

        - name: Docker Build, tag, and push image to ECR
          id: build-image
          run: |
                docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG --build-arg APP_ENV=dev .
                docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
                echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

        - name: Create application-dev.yml
          run: echo "${{ secrets.FEELIN_DEV_YML }}" > ./application-dev.yml

        - name: Deploy to EC2
          run: |
            aws deploy create-deployment \
              --application-name feelin-user-deploy \
              --deployment-group-name dev \
              --file-exists-behavior OVERWRITE \
              --s3-location bucket=${{ secrets.AWS_BUCKET }},bundleType=zip,key=waffle-music-sns.zip \
              --region ${{ secrets.AWS_REGION }}
